apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 32400
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: plex-config-volume
            # - mountPath: /data
              # name: plex-empty-dir  
            - mountPath: /media/4TB_1
              name: plex-media-1volume  
            - mountPath: /media/4TB_2
              name: plex-media-2volume  
            - mountPath: /media/4TB_3
              name: plex-media-3volume 
            - mountPath: /media/4TB_4
              name: plex-media-4volume
            - mountPath: /media/Externo8TB_1
              name: plex-media-5volume  
            - mountPath: /media/Externo8TB_2
              name: plex-media-6volume               
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: VERSION
              value: "docker"      
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: plex-config-volume
          persistentVolumeClaim:
            claimName: plex-config    
        # - name: plex-empty-dir
        #   emptyDir: {}
        - name: plex-media-1volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: 4TB_1
              readOnly: false
        - name: plex-media-2volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: 4TB_2
              readOnly: false
        - name: plex-media-3volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: 4TB_3
              readOnly: false
        - name: plex-media-4volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: 4TB_4
              readOnly: false
        - name: plex-media-5volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: Externo8TB_1
              readOnly: false
        - name: plex-media-6volume
            glusterfs:
              endpoints: glusterfs-cluster
              path: Externo8TB_2
              readOnly: false                               
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
