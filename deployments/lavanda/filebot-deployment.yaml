apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: filebot
  namespace: lavanda
spec:
  schedule: "@hourly"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: filebot
              image: ubuntu
              imagePullPolicy: IfNotPresent
              # securityContext:
              #   runAsUser: 1000
              #   runAsGroup: 1000
              command: ["/bin/sleep", "3650d"]
  
              # command:
              #   - /bin/sh
              #   - -c
              #   - filebot -script 'fn:amc' /downloads --output /downloaded --action move -non-strict --order Airdate --conflict skip --lang es --def 'music=y' 'unsorted=y' 'storeReport=/config/data/.reports' 'seriesFormat=/downloaded/Series/{n}/ Season {s}/{n} s{s.pad(2)}e{e.pad(2)}' 'movieFormat=/downloaded/Peliculas/{n} ({y})' 'unsortedFormat=/downloaded/Unsorted' 'excludeList=/config/data/.excludes'; [ $? -eq 100 ] || [ $? -eq 0 ]
              volumeMounts:
                - mountPath: /downloads
                  name: filebot-downloads
                - mountPath: /downloaded/Peliculas
                  name: filebot-downloaded-films
                - mountPath: /downloaded/Series
                  name: filebot-downloaded-shows
                - mountPath: /data
                  name: filebot-config
          restartPolicy: Never
          volumes:
            - name: filebot-downloads
              nfs:
                server: 10.10.120.50
                path: /media/Externo8TB_2/Descargas
            - name: filebot-downloaded-films
              nfs:
                server: 10.10.120.50
                path: /media/Externo8TB_2/Downloaded/Peliculas
            - name: filebot-downloaded-shows
              nfs:
                server: 10.10.120.50
                path: /media/Externo8TB_2/Downloaded/Series
            - name: filebot-config
              persistentVolumeClaim:
                claimName: filebot-config
